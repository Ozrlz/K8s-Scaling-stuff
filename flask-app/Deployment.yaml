apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: flask
  name: flask
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - image: ozrlz/flask-client:k8s
        imagePullPolicy: IfNotPresent
        name: flask
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: 
          requests:
            memory: "2G"
            cpu: "170m"
          limits:
            memory: "2G"
            cpu: "170m"
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask
  name: flask
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: flask-ingress
  namespace: default
spec:
  backend:
    serviceName: flask
    servicePort: 80